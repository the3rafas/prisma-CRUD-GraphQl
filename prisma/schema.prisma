// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
	provider = "postgresql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
    // binaryTargets = [ "native",  "debian-openssl-1.1.x", "debian-openssl-3.0.x",  "linux-musl", "linux-musl-openssl-3.0.x"]

}
generator nestgraphql {
	provider = "node node_modules/prisma-nestjs-graphql"
	output = "../src/@generated/prisma-nestjs-graphql"
}
model Auther {
	id String @id @default(uuid())
	/// @Validator.IsString()
	/// @Validator.IsNotEmpty()
	name String? 
	posts Book[] @relation(name: "AutherToBook")
}
model Book {
	id String @id @default(uuid())
	/// @Validator.IsString()
	/// @Validator.IsNotEmpty()
	title String 
	/// @Validator.IsString()
	/// @Validator.IsNotEmpty()
	content String? 
	published Boolean? @default(false)
	author Auther? @relation(name: "AutherToBook", fields: [authorId], references: [id])
	authorId String? 
	/// @HideField()
	delete Boolean @default(false)
}